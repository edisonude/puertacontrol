-- MySQL Script generated by MySQL Workbench
-- 01/12/18 00:17:43
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema puertacontrol
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `puertacontrol` ;

-- -----------------------------------------------------
-- Schema puertacontrol
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `puertacontrol` DEFAULT CHARACTER SET utf8 ;
USE `puertacontrol` ;

-- -----------------------------------------------------
-- Table `puertacontrol`.`room_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`room_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `description_UNIQUE` (`description` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa todas las habitaciones que tiene disponibles el sistema';


-- -----------------------------------------------------
-- Table `puertacontrol`.`status_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`status_room` (
  `code` VARCHAR(5) NOT NULL,
  `description` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa los estados que puede tener una habitación.';


-- -----------------------------------------------------
-- Table `puertacontrol`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`room` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `number` INT(11) NOT NULL COMMENT 'Número que le asigna el cliente a la puerta de la habitación',
  `floor` INT(11) NOT NULL COMMENT 'Piso en el que se encuentra ubicada la habitación',
  `photo` VARCHAR(1000) NULL DEFAULT NULL,
  `id_type` INT(11) NOT NULL,
  `code_status` VARCHAR(5) NOT NULL,
  `date_last_clean` DATETIME NULL DEFAULT NULL COMMENT 'Fecha en la que se realizó la última limpieza de la habitación',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `number_UNIQUE` (`number` ASC),
  INDEX `fk_room_room_type_idx` (`id_type` ASC),
  INDEX `fk_room_status_idx` (`code_status` ASC),
  CONSTRAINT `fk_room_room_type`
    FOREIGN KEY (`id_type`)
    REFERENCES `puertacontrol`.`room_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_room_status`
    FOREIGN KEY (`code_status`)
    REFERENCES `puertacontrol`.`status_room` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 28
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `puertacontrol`.`package`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`package` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `description_UNIQUE` (`description` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tiempo de gracia que se le da a un cliente para dar por finalizado su servicio.';


-- -----------------------------------------------------
-- Table `puertacontrol`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`rol` (
  `code` VARCHAR(5) NOT NULL,
  `description` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa todos los roles que puede tener un usuario del sistema. El rol determina los permisos que puede tener el usuario.';


-- -----------------------------------------------------
-- Table `puertacontrol`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(15) NOT NULL,
  `password` VARCHAR(15) NOT NULL,
  `code_rol` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_rol_idx` (`code_rol` ASC),
  CONSTRAINT `fk_user_rol`
    FOREIGN KEY (`code_rol`)
    REFERENCES `puertacontrol`.`rol` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa todos los usuarios que pueden acceder al sistema';


-- -----------------------------------------------------
-- Table `puertacontrol`.`service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`service` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_user` INT(11) NOT NULL,
  `id_room` INT(11) NOT NULL,
  `id_package` INT(11) NOT NULL,
  `time_service` INT(11) NOT NULL,
  `time_clean` INT(11) NOT NULL,
  `datetime_start_service` DATETIME NULL DEFAULT NULL,
  `datetime_end_service` DATETIME NULL DEFAULT NULL,
  `datetime_start_clean` DATETIME NULL DEFAULT NULL,
  `datetime_end_clean` DATETIME NULL DEFAULT NULL,
  `status` VARCHAR(5) NOT NULL COMMENT 'Estado del servicio: ACT(Activo) FIN(Finalizado)',
  `datetime_end_real` DATETIME NULL DEFAULT NULL COMMENT 'Fecha de finalización real del servicio',
  PRIMARY KEY (`id`),
  INDEX `fk_service_room_idx` (`id_room` ASC),
  INDEX `fk_service_package_idx` (`id_package` ASC),
  INDEX `fk_service_user_idx` (`id_user` ASC),
  CONSTRAINT `fk_service_package`
    FOREIGN KEY (`id_package`)
    REFERENCES `puertacontrol`.`package` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_room`
    FOREIGN KEY (`id_room`)
    REFERENCES `puertacontrol`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `puertacontrol`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 14
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa el prestámo servicio que se hace de una habitación, en un paquete u horario especifico a un cliente.';


-- -----------------------------------------------------
-- Table `puertacontrol`.`alert_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`alert_type` (
  `code` VARCHAR(5) NOT NULL,
  `description` VARCHAR(50) NOT NULL,
  `priority` VARCHAR(20) NOT NULL COMMENT 'Prioridad del tipo de alerta',
  PRIMARY KEY (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa los tipos de alerta que maneja la aplicación';


-- -----------------------------------------------------
-- Table `puertacontrol`.`alert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`alert` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_service` INT(11) NULL DEFAULT NULL,
  `id_room` INT(11) NULL DEFAULT NULL,
  `code_type` VARCHAR(5) NULL DEFAULT NULL,
  `date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_alert_type_idx` (`code_type` ASC),
  INDEX `fk_alert_service_idx` (`id_service` ASC),
  INDEX `fk_alert_room_idx` (`id_room` ASC),
  CONSTRAINT `fk_alert_room`
    FOREIGN KEY (`id_room`)
    REFERENCES `puertacontrol`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alert_service`
    FOREIGN KEY (`id_service`)
    REFERENCES `puertacontrol`.`service` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alert_type`
    FOREIGN KEY (`code_type`)
    REFERENCES `puertacontrol`.`alert_type` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `puertacontrol`.`operation_room_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`operation_room_log` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `date_action` DATETIME NOT NULL,
  `number_room` INT(11) NOT NULL,
  `message` VARCHAR(100) NOT NULL,
  `processed` TINYINT(1) NOT NULL DEFAULT '0',
  `date_processed` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 156
DEFAULT CHARACTER SET = utf8
COMMENT = 'Log de operaciones de apertura/cierre de las habitaciones';


-- -----------------------------------------------------
-- Table `puertacontrol`.`package_x_type_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`package_x_type_room` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_package` INT(11) NOT NULL,
  `id_room_type` INT(11) NOT NULL,
  `time_service` INT(11) NOT NULL COMMENT 'Tiempo po defecto en el que la habitación es prestada a un cliente',
  `time_clean` INT(11) NOT NULL COMMENT 'Tiempo po defecto en el que la habitación debe ser limpiada',
  `time_grace` INT(11) NOT NULL DEFAULT '0' COMMENT 'Tiempo de gracia que se le da al cliente para liberar el servicio antes de someterse a una multa',
  PRIMARY KEY (`id`),
  INDEX `fk_package_x_type_room_package_idx` (`id_package` ASC),
  INDEX `fk_package_x_type_room_type_idx` (`id_room_type` ASC),
  CONSTRAINT `fk_package_x_type_room_package`
    FOREIGN KEY (`id_package`)
    REFERENCES `puertacontrol`.`package` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_package_x_type_room_type`
    FOREIGN KEY (`id_room_type`)
    REFERENCES `puertacontrol`.`room_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 15
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa los paquetes que puede ofrecer un tipo de habitación';


-- -----------------------------------------------------
-- Table `puertacontrol`.`resource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`resource` (
  `id_resource` INT(11) NOT NULL AUTO_INCREMENT,
  `path` VARCHAR(100) NOT NULL,
  `description` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_resource`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `puertacontrol`.`resources_x_rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`resources_x_rol` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `code_rol` VARCHAR(5) NOT NULL,
  `id_resource` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_resources_x_rol_rol_idx` (`code_rol` ASC),
  INDEX `fk_resources_x_rol_resource_idx` (`id_resource` ASC),
  CONSTRAINT `fk_resources_x_rol_resource`
    FOREIGN KEY (`id_resource`)
    REFERENCES `puertacontrol`.`resource` (`id_resource`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_resources_x_rol_rol`
    FOREIGN KEY (`code_rol`)
    REFERENCES `puertacontrol`.`rol` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `puertacontrol`.`user_notified`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`user_notified` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `id_alert` INT(11) NOT NULL,
  `id_user` INT(11) NOT NULL,
  `date_first_notify` DATETIME NOT NULL,
  `no_notifications` INT(11) NOT NULL,
  `date_readed` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_notified_alert_idx` (`id_alert` ASC),
  INDEX `fk_user_notified_user_idx` (`id_user` ASC),
  CONSTRAINT `fk_user_notified_alert`
    FOREIGN KEY (`id_alert`)
    REFERENCES `puertacontrol`.`alert` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_notified_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `puertacontrol`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa la notificación que se realizó para un usuario especifico.';


-- -----------------------------------------------------
-- Table `puertacontrol`.`user_x_alert_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`user_x_alert_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `code_alert_type` VARCHAR(5) NOT NULL,
  `id_user` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_x_alert_type_type_idx` (`code_alert_type` ASC),
  INDEX `fk_user_x_alert_type_user_idx` (`id_user` ASC),
  CONSTRAINT `fk_user_x_alert_type_type`
    FOREIGN KEY (`code_alert_type`)
    REFERENCES `puertacontrol`.`alert_type` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_x_alert_type_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `puertacontrol`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Representa los usuarios que deben notificarse según el tipo de alerta';


-- -----------------------------------------------------
-- Table `puertacontrol`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(100) NOT NULL,
  `quantity` INT NOT NULL DEFAULT 0,
  `quantity_min` INT NULL,
  `code` VARCHAR(20) NOT NULL COMMENT 'Código especial del producto, pensado para el código de barras',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `puertacontrol`.`products_x_type_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`products_x_type_room` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_room_type` INT NOT NULL,
  `id_product` INT NOT NULL,
  `quantity` INT NOT NULL DEFAULT 0,
  `quantity_min` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_product_x_room_idx` (`id_product` ASC),
  INDEX `fk_room_type_x_product_idx` (`id_room_type` ASC),
  CONSTRAINT `fk_room_type_x_product`
    FOREIGN KEY (`id_room_type`)
    REFERENCES `puertacontrol`.`room_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_x_room`
    FOREIGN KEY (`id_product`)
    REFERENCES `puertacontrol`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Relaciona los productos que estan asignados a una habitación';


-- -----------------------------------------------------
-- Table `puertacontrol`.`provider`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`provider` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `document_type` VARCHAR(5) NULL COMMENT 'Tipo de documento del proveedor, puede ser NIT o CC',
  `document` VARCHAR(20) NULL,
  `name` VARCHAR(100) NOT NULL,
  `addrees` VARCHAR(100) NULL,
  `phone` VARCHAR(20) NULL,
  `email` VARCHAR(60) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `puertacontrol`.`buy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`buy` (
  `id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `id_provider` INT NOT NULL DEFAULT 1,
  `id_user` INT NOT NULL COMMENT 'Usuario que registro la compra',
  `gross_value` DOUBLE NOT NULL,
  `iva_value` DOUBLE NOT NULL,
  `net_value` DOUBLE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_buy_provider_idx` (`id_provider` ASC),
  INDEX `fk_buy_user_idx` (`id_user` ASC),
  CONSTRAINT `fk_buy_provider`
    FOREIGN KEY (`id_provider`)
    REFERENCES `puertacontrol`.`provider` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_buy_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `puertacontrol`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `puertacontrol`.`buy_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`buy_details` (
  `id_detail` INT NOT NULL AUTO_INCREMENT,
  `id_buy` INT NOT NULL,
  `id_product` INT NOT NULL,
  `quantity` INT NOT NULL,
  `gross_value` DOUBLE NOT NULL,
  `iva_value` DOUBLE NOT NULL,
  `net_value` DOUBLE NOT NULL,
  PRIMARY KEY (`id_detail`),
  INDEX `fk_details_x_buy_idx` (`id_buy` ASC),
  INDEX `fk_details_x_product_idx` (`id_product` ASC),
  CONSTRAINT `fk_details_x_buy`
    FOREIGN KEY (`id_buy`)
    REFERENCES `puertacontrol`.`buy` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_details_x_product`
    FOREIGN KEY (`id_product`)
    REFERENCES `puertacontrol`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `puertacontrol` ;

-- -----------------------------------------------------
-- Placeholder table for view `puertacontrol`.`room_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`room_details` (`id` INT, `number` INT, `type` INT, `alerts` INT, `status_code` INT, `status` INT, `datetime_start_service` INT, `datetime_end_service` INT, `datetime_start_clean` INT, `datetime_end_clean` INT);

-- -----------------------------------------------------
-- View `puertacontrol`.`room_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `puertacontrol`.`room_details`;
USE `puertacontrol`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `puertacontrol`.`room_details` AS select `r`.`id` AS `id`,`r`.`number` AS `number`,`rt`.`description` AS `type`,`a`.`alerts` AS `alerts`,`sr`.`code` AS `status_code`,`sr`.`description` AS `status`,`s`.`datetime_start_service` AS `datetime_start_service`,`s`.`datetime_end_service` AS `datetime_end_service`,`s`.`datetime_start_clean` AS `datetime_start_clean`,`s`.`datetime_end_clean` AS `datetime_end_clean` from ((((`puertacontrol`.`room` `r` left join (select `puertacontrol`.`alert`.`id_room` AS `id_room`,count(`puertacontrol`.`alert`.`id`) AS `alerts` from `puertacontrol`.`alert` where (`puertacontrol`.`alert`.`code_type` = 'IDO') group by `puertacontrol`.`alert`.`id_room`) `a` on((`r`.`id` = `a`.`id_room`))) join `puertacontrol`.`status_room` `sr` on((`sr`.`code` = `r`.`code_status`))) join `puertacontrol`.`room_type` `rt` on((`r`.`id_type` = `rt`.`id`))) left join `puertacontrol`.`service` `s` on(((`s`.`id_room` = `r`.`id`) and (`s`.`status` = 'ACT'))));

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

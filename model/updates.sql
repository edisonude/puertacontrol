-- Se establece el código como un campo no requerido y se pone valores por defecto sobre las cantidades

ALTER TABLE `puertacontrol`.`product` 
CHANGE COLUMN `quantity_min` `quantity_min` INT(11) NOT NULL DEFAULT 0 ,
CHANGE COLUMN `code` `code` VARCHAR(20) NULL COMMENT 'Código especial del producto, pensado para el código de barras' ;

-- Se cambia la relación del paquete al paquete x tipo de habitación.

ALTER TABLE `puertacontrol`.`service` 
DROP FOREIGN KEY `fk_service_package`;
ALTER TABLE `puertacontrol`.`service` 
ADD INDEX `fk_service_package_idx` (`id_package` ASC),
DROP INDEX `fk_service_package_idx` ;
ALTER TABLE `puertacontrol`.`service` 
ADD CONSTRAINT `fk_service_package`
  FOREIGN KEY (`id_package`)
  REFERENCES `puertacontrol`.`package_x_type_room` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
  
-- Se agrega el precio para los paquetes
ALTER TABLE `puertacontrol`.`package_x_type_room` 
ADD COLUMN `price` DOUBLE NOT NULL DEFAULT 0 AFTER `time_grace`;

--

ALTER TABLE `puertacontrol`.`service` 
ADD COLUMN `net_value` DOUBLE NULL COMMENT 'Valor total del servicio una vez es finalizado' AFTER `datetime_end_real`;

-- Se crea tabla para guardar los detalles de un servicio

-- MySQL Script generated by MySQL Workbench
-- 01/22/18 00:54:51
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema puertacontrol
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema puertacontrol
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `puertacontrol` DEFAULT CHARACTER SET utf8 ;
USE `puertacontrol` ;

-- -----------------------------------------------------
-- Table `puertacontrol`.`service_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `puertacontrol`.`service_details` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_service` INT NOT NULL,
  `id_product` INT NULL COMMENT 'Posible producto relacionado en el detalle',
  `id_package` INT NULL COMMENT 'Posible paquete relacionado en el detalle',
  `quantity` INT NULL,
  `price` DOUBLE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_service_detail_idx` (`id_service` ASC),
  INDEX `fk_service_detail_x_product_idx` (`id_product` ASC),
  INDEX `fk_service_detail_x_package_idx` (`id_package` ASC),
  CONSTRAINT `fk_service_detail_x_service`
    FOREIGN KEY (`id_service`)
    REFERENCES `puertacontrol`.`service` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_detail_x_product`
    FOREIGN KEY (`id_product`)
    REFERENCES `puertacontrol`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_detail_x_package`
    FOREIGN KEY (`id_package`)
    REFERENCES `puertacontrol`.`package` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Detalles del servicio';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

--

ALTER TABLE `puertacontrol`.`service` 
CHANGE COLUMN `datetime_end_real` `datetime_end_real_service` DATETIME NULL DEFAULT NULL COMMENT 'Fecha de finalización real del servicio' ,
ADD COLUMN `datetime_end_real_clean` DATETIME NULL COMMENT 'Fecha de finalización real de la limpieza' AFTER `datetime_end_real_service`;

